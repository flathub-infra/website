/**
 * Generated by orval v6.25.0 🍺
 * Do not edit manually.
 * Flathub API
 * OpenAPI spec version: 0.1.0
 */
import { HttpResponse, delay, http } from "msw"
import type {
  ProcessTransfersUpdateProcessPendingTransfersPost200,
  UpdateStatsUpdateStatsPost200,
  UpdateUpdatePost200,
} from ".././model"

export const getUpdateUpdatePostResponseMock = (): UpdateUpdatePost200 => ({})

export const getUpdateStatsUpdateStatsPostResponseMock =
  (): UpdateStatsUpdateStatsPost200 => ({})

export const getProcessTransfersUpdateProcessPendingTransfersPostResponseMock =
  (): ProcessTransfersUpdateProcessPendingTransfersPost200 => ({})

export const getUpdateUpdatePostMockHandler = (
  overrideResponse?: UpdateUpdatePost200,
) => {
  return http.post("*/update", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse ? overrideResponse : getUpdateUpdatePostResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getUpdateStatsUpdateStatsPostMockHandler = (
  overrideResponse?: UpdateStatsUpdateStatsPost200,
) => {
  return http.post("*/update/stats", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getUpdateStatsUpdateStatsPostResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getProcessTransfersUpdateProcessPendingTransfersPostMockHandler = (
  overrideResponse?: ProcessTransfersUpdateProcessPendingTransfersPost200,
) => {
  return http.post("*/update/process-pending-transfers", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getProcessTransfersUpdateProcessPendingTransfersPostResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}
export const getUpdateMock = () => [
  getUpdateUpdatePostMockHandler(),
  getUpdateStatsUpdateStatsPostMockHandler(),
  getProcessTransfersUpdateProcessPendingTransfersPostMockHandler(),
]
