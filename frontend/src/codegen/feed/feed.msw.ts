/**
 * Generated by orval üç∫
 * Do not edit manually.
 * Flathub API
 * OpenAPI spec version: 0.1.0
 */
import { HttpResponse, delay, http } from "msw"

export const getGetRecentlyUpdatedAppsFeedFeedRecentlyUpdatedGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/feed/recently-updated", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetNewAppsFeedFeedNewGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/feed/new", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetRecentlyUpdatedAppsFeedPostgresFeedRecentlyUpdatedPostgresGetMockHandler =
  (
    overrideResponse?:
      | unknown
      | ((
          info: Parameters<Parameters<typeof http.get>[1]>[0],
        ) => Promise<unknown> | unknown),
  ) => {
    return http.get("*/feed/recently-updated-postgres", async (info) => {
      await delay(1000)
      if (typeof overrideResponse === "function") {
        await overrideResponse(info)
      }
      return new HttpResponse(null, { status: 200 })
    })
  }

export const getGetNewAppsFeedPostgresFeedNewPostgresGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/feed/new-postgres", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}
export const getFeedMock = () => [
  getGetRecentlyUpdatedAppsFeedFeedRecentlyUpdatedGetMockHandler(),
  getGetNewAppsFeedFeedNewGetMockHandler(),
  getGetRecentlyUpdatedAppsFeedPostgresFeedRecentlyUpdatedPostgresGetMockHandler(),
  getGetNewAppsFeedPostgresFeedNewPostgresGetMockHandler(),
]
