/**
 * Generated by orval v6.25.0 🍺
 * Do not edit manually.
 * Flathub API
 * OpenAPI spec version: 0.1.0
 */
import { faker } from "@faker-js/faker"
import { HttpResponse, delay, http } from "msw"
import type {
  AppOfTheDay,
  AppsOfTheWeek,
  SetAppOfTheDayAppPicksAppOfTheDayPost200,
  SetAppOfTheWeekAppPicksAppOfTheWeekPost200,
} from ".././model"

export const getGetAppOfTheDayAppPicksAppOfTheDayDateGetResponseMock = (
  overrideResponse: any = {},
): AppOfTheDay => ({
  app_id: faker.word.sample(),
  day: faker.date.past().toISOString().split("T")[0],
  ...overrideResponse,
})

export const getGetAppOfTheWeekAppPicksAppsOfTheWeekDateGetResponseMock = (
  overrideResponse: any = {},
): AppsOfTheWeek => ({
  apps: Array.from(
    { length: faker.number.int({ min: 1, max: 10 }) },
    (_, i) => i + 1,
  ).map(() => ({
    app_id: faker.word.sample(),
    isFullscreen: faker.datatype.boolean(),
    position: faker.number.int({ min: undefined, max: undefined }),
    ...overrideResponse,
  })),
  ...overrideResponse,
})

export const getSetAppOfTheWeekAppPicksAppOfTheWeekPostResponseMock =
  (): SetAppOfTheWeekAppPicksAppOfTheWeekPost200 => ({})

export const getSetAppOfTheDayAppPicksAppOfTheDayPostResponseMock =
  (): SetAppOfTheDayAppPicksAppOfTheDayPost200 => ({})

export const getGetAppOfTheDayAppPicksAppOfTheDayDateGetMockHandler = (
  overrideResponse?: AppOfTheDay,
) => {
  return http.get("*/app-picks/app-of-the-day/:date", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetAppOfTheDayAppPicksAppOfTheDayDateGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getGetAppOfTheWeekAppPicksAppsOfTheWeekDateGetMockHandler = (
  overrideResponse?: AppsOfTheWeek,
) => {
  return http.get("*/app-picks/apps-of-the-week/:date", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetAppOfTheWeekAppPicksAppsOfTheWeekDateGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getSetAppOfTheWeekAppPicksAppOfTheWeekPostMockHandler = (
  overrideResponse?: SetAppOfTheWeekAppPicksAppOfTheWeekPost200,
) => {
  return http.post("*/app-picks/app-of-the-week", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getSetAppOfTheWeekAppPicksAppOfTheWeekPostResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getSetAppOfTheDayAppPicksAppOfTheDayPostMockHandler = (
  overrideResponse?: SetAppOfTheDayAppPicksAppOfTheDayPost200,
) => {
  return http.post("*/app-picks/app-of-the-day", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getSetAppOfTheDayAppPicksAppOfTheDayPostResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}
export const getAppPicksMock = () => [
  getGetAppOfTheDayAppPicksAppOfTheDayDateGetMockHandler(),
  getGetAppOfTheWeekAppPicksAppsOfTheWeekDateGetMockHandler(),
  getSetAppOfTheWeekAppPicksAppOfTheWeekPostMockHandler(),
  getSetAppOfTheDayAppPicksAppOfTheDayPostMockHandler(),
]
