/**
 * Generated by orval v6.26.0 🍺
 * Do not edit manually.
 * Flathub API
 * OpenAPI spec version: 0.1.0
 */
import { faker } from "@faker-js/faker"
import { HttpResponse, delay, http } from "msw"

export const getPreviewTemplatesEmailsPreviewGetResponseMock = (): string =>
  faker.word.sample()

export const getPreviewTemplateEmailsPreviewNameGetResponseMock = (): string =>
  faker.word.sample()

export const getBuildNotificationEmailsBuildNotificationPostMockHandler =
  () => {
    return http.post("*/emails/build-notification", async () => {
      await delay(1000)
      return new HttpResponse(null, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      })
    })
  }

export const getPreviewTemplatesEmailsPreviewGetMockHandler = (
  overrideResponse?: string,
) => {
  return http.get("*/emails/preview", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getPreviewTemplatesEmailsPreviewGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getPreviewTemplateEmailsPreviewNameGetMockHandler = (
  overrideResponse?: string,
) => {
  return http.get("*/emails/preview/:name", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getPreviewTemplateEmailsPreviewNameGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}
export const getEmailMock = () => [
  getBuildNotificationEmailsBuildNotificationPostMockHandler(),
  getPreviewTemplatesEmailsPreviewGetMockHandler(),
  getPreviewTemplateEmailsPreviewNameGetMockHandler(),
]
