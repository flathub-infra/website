/**
 * Generated by orval v6.25.0 🍺
 * Do not edit manually.
 * Flathub API
 * OpenAPI spec version: 0.1.0
 */
import { HttpResponse, delay, http } from "msw"
import type {
  GetAppsCompatAppsGet200,
  GetAppsInCategoryCompatAppsCategoryCategoryGet200,
  GetPopularAppsCompatAppsCollectionPopular50Get200,
  GetPopularAppsCompatAppsCollectionPopularGet200,
  GetRecentlyAddedCompatAppsCollectionNew50Get200,
  GetRecentlyAddedCompatAppsCollectionNewGet200,
  GetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50Get200,
  GetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGet200,
  GetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50Get200,
  GetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGet200,
  GetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50Get200,
  GetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGet200,
  GetSearchCompatAppsSearchQueryGet200,
  GetSingleAppCompatAppsAppIdGet200,
} from ".././model"

export const getGetAppsCompatAppsGetResponseMock =
  (): GetAppsCompatAppsGet200 => ({})

export const getGetAppsInCategoryCompatAppsCategoryCategoryGetResponseMock =
  (): GetAppsInCategoryCompatAppsCategoryCategoryGet200 => ({})

export const getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50GetResponseMock =
  (): GetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50Get200 => ({})

export const getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGetResponseMock =
  (): GetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGet200 => ({})

export const getGetRecentlyAddedCompatAppsCollectionNew50GetResponseMock =
  (): GetRecentlyAddedCompatAppsCollectionNew50Get200 => ({})

export const getGetRecentlyAddedCompatAppsCollectionNewGetResponseMock =
  (): GetRecentlyAddedCompatAppsCollectionNewGet200 => ({})

export const getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50GetResponseMock =
  (): GetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50Get200 => ({})

export const getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGetResponseMock =
  (): GetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGet200 => ({})

export const getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50GetResponseMock =
  (): GetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50Get200 => ({})

export const getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGetResponseMock =
  (): GetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGet200 => ({})

export const getGetPopularAppsCompatAppsCollectionPopular50GetResponseMock =
  (): GetPopularAppsCompatAppsCollectionPopular50Get200 => ({})

export const getGetPopularAppsCompatAppsCollectionPopularGetResponseMock =
  (): GetPopularAppsCompatAppsCollectionPopularGet200 => ({})

export const getGetSearchCompatAppsSearchQueryGetResponseMock =
  (): GetSearchCompatAppsSearchQueryGet200 => ({})

export const getGetSingleAppCompatAppsAppIdGetResponseMock =
  (): GetSingleAppCompatAppsAppIdGet200 => ({})

export const getGetAppsCompatAppsGetMockHandler = (
  overrideResponse?: GetAppsCompatAppsGet200,
) => {
  return http.get("*/compat/apps", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetAppsCompatAppsGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getGetAppsInCategoryCompatAppsCategoryCategoryGetMockHandler = (
  overrideResponse?: GetAppsInCategoryCompatAppsCategoryCategoryGet200,
) => {
  return http.get("*/compat/apps/category/:category", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetAppsInCategoryCompatAppsCategoryCategoryGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50GetMockHandler =
  (
    overrideResponse?: GetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50Get200,
  ) => {
    return http.get(
      "*/compat/apps/collection/recently-updated/50",
      async () => {
        await delay(1000)
        return new HttpResponse(
          JSON.stringify(
            overrideResponse
              ? overrideResponse
              : getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50GetResponseMock(),
          ),
          {
            status: 200,
            headers: {
              "Content-Type": "application/json",
            },
          },
        )
      },
    )
  }

export const getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGetMockHandler =
  (
    overrideResponse?: GetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGet200,
  ) => {
    return http.get("*/compat/apps/collection/recently-updated", async () => {
      await delay(1000)
      return new HttpResponse(
        JSON.stringify(
          overrideResponse
            ? overrideResponse
            : getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGetResponseMock(),
        ),
        {
          status: 200,
          headers: {
            "Content-Type": "application/json",
          },
        },
      )
    })
  }

export const getGetRecentlyAddedCompatAppsCollectionNew50GetMockHandler = (
  overrideResponse?: GetRecentlyAddedCompatAppsCollectionNew50Get200,
) => {
  return http.get("*/compat/apps/collection/new/50", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetRecentlyAddedCompatAppsCollectionNew50GetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getGetRecentlyAddedCompatAppsCollectionNewGetMockHandler = (
  overrideResponse?: GetRecentlyAddedCompatAppsCollectionNewGet200,
) => {
  return http.get("*/compat/apps/collection/new", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetRecentlyAddedCompatAppsCollectionNewGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50GetMockHandler =
  (
    overrideResponse?: GetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50Get200,
  ) => {
    return http.get(
      "*/compat/apps/collection/recently-updated-postgres/50",
      async () => {
        await delay(1000)
        return new HttpResponse(
          JSON.stringify(
            overrideResponse
              ? overrideResponse
              : getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50GetResponseMock(),
          ),
          {
            status: 200,
            headers: {
              "Content-Type": "application/json",
            },
          },
        )
      },
    )
  }

export const getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGetMockHandler =
  (
    overrideResponse?: GetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGet200,
  ) => {
    return http.get(
      "*/compat/apps/collection/recently-updated-postgres",
      async () => {
        await delay(1000)
        return new HttpResponse(
          JSON.stringify(
            overrideResponse
              ? overrideResponse
              : getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGetResponseMock(),
          ),
          {
            status: 200,
            headers: {
              "Content-Type": "application/json",
            },
          },
        )
      },
    )
  }

export const getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50GetMockHandler =
  (
    overrideResponse?: GetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50Get200,
  ) => {
    return http.get("*/compat/apps/collection/new-postgres/50", async () => {
      await delay(1000)
      return new HttpResponse(
        JSON.stringify(
          overrideResponse
            ? overrideResponse
            : getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50GetResponseMock(),
        ),
        {
          status: 200,
          headers: {
            "Content-Type": "application/json",
          },
        },
      )
    })
  }

export const getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGetMockHandler =
  (
    overrideResponse?: GetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGet200,
  ) => {
    return http.get("*/compat/apps/collection/new-postgres", async () => {
      await delay(1000)
      return new HttpResponse(
        JSON.stringify(
          overrideResponse
            ? overrideResponse
            : getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGetResponseMock(),
        ),
        {
          status: 200,
          headers: {
            "Content-Type": "application/json",
          },
        },
      )
    })
  }

export const getGetPopularAppsCompatAppsCollectionPopular50GetMockHandler = (
  overrideResponse?: GetPopularAppsCompatAppsCollectionPopular50Get200,
) => {
  return http.get("*/compat/apps/collection/popular/50", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetPopularAppsCompatAppsCollectionPopular50GetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getGetPopularAppsCompatAppsCollectionPopularGetMockHandler = (
  overrideResponse?: GetPopularAppsCompatAppsCollectionPopularGet200,
) => {
  return http.get("*/compat/apps/collection/popular", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetPopularAppsCompatAppsCollectionPopularGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getGetSearchCompatAppsSearchQueryGetMockHandler = (
  overrideResponse?: GetSearchCompatAppsSearchQueryGet200,
) => {
  return http.get("*/compat/apps/search/:query", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetSearchCompatAppsSearchQueryGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}

export const getGetSingleAppCompatAppsAppIdGetMockHandler = (
  overrideResponse?: GetSingleAppCompatAppsAppIdGet200,
) => {
  return http.get("*/compat/apps/:appId", async () => {
    await delay(1000)
    return new HttpResponse(
      JSON.stringify(
        overrideResponse
          ? overrideResponse
          : getGetSingleAppCompatAppsAppIdGetResponseMock(),
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      },
    )
  })
}
export const getCompatMock = () => [
  getGetAppsCompatAppsGetMockHandler(),
  getGetAppsInCategoryCompatAppsCategoryCategoryGetMockHandler(),
  getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50GetMockHandler(),
  getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGetMockHandler(),
  getGetRecentlyAddedCompatAppsCollectionNew50GetMockHandler(),
  getGetRecentlyAddedCompatAppsCollectionNewGetMockHandler(),
  getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50GetMockHandler(),
  getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGetMockHandler(),
  getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50GetMockHandler(),
  getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGetMockHandler(),
  getGetPopularAppsCompatAppsCollectionPopular50GetMockHandler(),
  getGetPopularAppsCompatAppsCollectionPopularGetMockHandler(),
  getGetSearchCompatAppsSearchQueryGetMockHandler(),
  getGetSingleAppCompatAppsAppIdGetMockHandler(),
]
