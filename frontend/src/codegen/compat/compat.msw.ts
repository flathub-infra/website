/**
 * Generated by orval üç∫
 * Do not edit manually.
 * Flathub API
 * OpenAPI spec version: 0.1.0
 */
import { HttpResponse, delay, http } from "msw"

export const getGetAppsCompatAppsGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/compat/apps", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetAppsInCategoryCompatAppsCategoryCategoryGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/compat/apps/category/:category", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50GetMockHandler =
  (
    overrideResponse?:
      | unknown
      | ((
          info: Parameters<Parameters<typeof http.get>[1]>[0],
        ) => Promise<unknown> | unknown),
  ) => {
    return http.get(
      "*/compat/apps/collection/recently-updated/50",
      async (info) => {
        await delay(1000)
        if (typeof overrideResponse === "function") {
          await overrideResponse(info)
        }
        return new HttpResponse(null, { status: 200 })
      },
    )
  }

export const getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGetMockHandler =
  (
    overrideResponse?:
      | unknown
      | ((
          info: Parameters<Parameters<typeof http.get>[1]>[0],
        ) => Promise<unknown> | unknown),
  ) => {
    return http.get(
      "*/compat/apps/collection/recently-updated",
      async (info) => {
        await delay(1000)
        if (typeof overrideResponse === "function") {
          await overrideResponse(info)
        }
        return new HttpResponse(null, { status: 200 })
      },
    )
  }

export const getGetRecentlyAddedCompatAppsCollectionNew50GetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/compat/apps/collection/new/50", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetRecentlyAddedCompatAppsCollectionNewGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/compat/apps/collection/new", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50GetMockHandler =
  (
    overrideResponse?:
      | unknown
      | ((
          info: Parameters<Parameters<typeof http.get>[1]>[0],
        ) => Promise<unknown> | unknown),
  ) => {
    return http.get(
      "*/compat/apps/collection/recently-updated-postgres/50",
      async (info) => {
        await delay(1000)
        if (typeof overrideResponse === "function") {
          await overrideResponse(info)
        }
        return new HttpResponse(null, { status: 200 })
      },
    )
  }

export const getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGetMockHandler =
  (
    overrideResponse?:
      | unknown
      | ((
          info: Parameters<Parameters<typeof http.get>[1]>[0],
        ) => Promise<unknown> | unknown),
  ) => {
    return http.get(
      "*/compat/apps/collection/recently-updated-postgres",
      async (info) => {
        await delay(1000)
        if (typeof overrideResponse === "function") {
          await overrideResponse(info)
        }
        return new HttpResponse(null, { status: 200 })
      },
    )
  }

export const getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50GetMockHandler =
  (
    overrideResponse?:
      | unknown
      | ((
          info: Parameters<Parameters<typeof http.get>[1]>[0],
        ) => Promise<unknown> | unknown),
  ) => {
    return http.get(
      "*/compat/apps/collection/new-postgres/50",
      async (info) => {
        await delay(1000)
        if (typeof overrideResponse === "function") {
          await overrideResponse(info)
        }
        return new HttpResponse(null, { status: 200 })
      },
    )
  }

export const getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGetMockHandler =
  (
    overrideResponse?:
      | unknown
      | ((
          info: Parameters<Parameters<typeof http.get>[1]>[0],
        ) => Promise<unknown> | unknown),
  ) => {
    return http.get("*/compat/apps/collection/new-postgres", async (info) => {
      await delay(1000)
      if (typeof overrideResponse === "function") {
        await overrideResponse(info)
      }
      return new HttpResponse(null, { status: 200 })
    })
  }

export const getGetPopularAppsCompatAppsCollectionPopular50GetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/compat/apps/collection/popular/50", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetPopularAppsCompatAppsCollectionPopularGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/compat/apps/collection/popular", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetSearchCompatAppsSearchQueryGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/compat/apps/search/:query", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}

export const getGetSingleAppCompatAppsAppIdGetMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.get("*/compat/apps/:appId", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 200 })
  })
}
export const getCompatMock = () => [
  getGetAppsCompatAppsGetMockHandler(),
  getGetAppsInCategoryCompatAppsCategoryCategoryGetMockHandler(),
  getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50GetMockHandler(),
  getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGetMockHandler(),
  getGetRecentlyAddedCompatAppsCollectionNew50GetMockHandler(),
  getGetRecentlyAddedCompatAppsCollectionNewGetMockHandler(),
  getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50GetMockHandler(),
  getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGetMockHandler(),
  getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50GetMockHandler(),
  getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGetMockHandler(),
  getGetPopularAppsCompatAppsCollectionPopular50GetMockHandler(),
  getGetPopularAppsCompatAppsCollectionPopularGetMockHandler(),
  getGetSearchCompatAppsSearchQueryGetMockHandler(),
  getGetSingleAppCompatAppsAppIdGetMockHandler(),
]
