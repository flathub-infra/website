/**
 * Generated by orval v6.26.0 🍺
 * Do not edit manually.
 * Flathub API
 * OpenAPI spec version: 0.1.0
 */
import { HttpResponse, delay, http } from "msw"

export const getGetAppsCompatAppsGetMockHandler = () => {
  return http.get("*/compat/apps", async () => {
    await delay(1000)
    return new HttpResponse(null, {
      status: 200,
      headers: {
        "Content-Type": "application/json",
      },
    })
  })
}

export const getGetAppsInCategoryCompatAppsCategoryCategoryGetMockHandler =
  () => {
    return http.get("*/compat/apps/category/:category", async () => {
      await delay(1000)
      return new HttpResponse(null, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      })
    })
  }

export const getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50GetMockHandler =
  () => {
    return http.get(
      "*/compat/apps/collection/recently-updated/50",
      async () => {
        await delay(1000)
        return new HttpResponse(null, {
          status: 200,
          headers: {
            "Content-Type": "application/json",
          },
        })
      },
    )
  }

export const getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGetMockHandler =
  () => {
    return http.get("*/compat/apps/collection/recently-updated", async () => {
      await delay(1000)
      return new HttpResponse(null, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      })
    })
  }

export const getGetRecentlyAddedCompatAppsCollectionNew50GetMockHandler =
  () => {
    return http.get("*/compat/apps/collection/new/50", async () => {
      await delay(1000)
      return new HttpResponse(null, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      })
    })
  }

export const getGetRecentlyAddedCompatAppsCollectionNewGetMockHandler = () => {
  return http.get("*/compat/apps/collection/new", async () => {
    await delay(1000)
    return new HttpResponse(null, {
      status: 200,
      headers: {
        "Content-Type": "application/json",
      },
    })
  })
}

export const getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50GetMockHandler =
  () => {
    return http.get(
      "*/compat/apps/collection/recently-updated-postgres/50",
      async () => {
        await delay(1000)
        return new HttpResponse(null, {
          status: 200,
          headers: {
            "Content-Type": "application/json",
          },
        })
      },
    )
  }

export const getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGetMockHandler =
  () => {
    return http.get(
      "*/compat/apps/collection/recently-updated-postgres",
      async () => {
        await delay(1000)
        return new HttpResponse(null, {
          status: 200,
          headers: {
            "Content-Type": "application/json",
          },
        })
      },
    )
  }

export const getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50GetMockHandler =
  () => {
    return http.get("*/compat/apps/collection/new-postgres/50", async () => {
      await delay(1000)
      return new HttpResponse(null, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      })
    })
  }

export const getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGetMockHandler =
  () => {
    return http.get("*/compat/apps/collection/new-postgres", async () => {
      await delay(1000)
      return new HttpResponse(null, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      })
    })
  }

export const getGetPopularAppsCompatAppsCollectionPopular50GetMockHandler =
  () => {
    return http.get("*/compat/apps/collection/popular/50", async () => {
      await delay(1000)
      return new HttpResponse(null, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      })
    })
  }

export const getGetPopularAppsCompatAppsCollectionPopularGetMockHandler =
  () => {
    return http.get("*/compat/apps/collection/popular", async () => {
      await delay(1000)
      return new HttpResponse(null, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      })
    })
  }

export const getGetSearchCompatAppsSearchQueryGetMockHandler = () => {
  return http.get("*/compat/apps/search/:query", async () => {
    await delay(1000)
    return new HttpResponse(null, {
      status: 200,
      headers: {
        "Content-Type": "application/json",
      },
    })
  })
}

export const getGetSingleAppCompatAppsAppIdGetMockHandler = () => {
  return http.get("*/compat/apps/:appId", async () => {
    await delay(1000)
    return new HttpResponse(null, {
      status: 200,
      headers: {
        "Content-Type": "application/json",
      },
    })
  })
}
export const getCompatMock = () => [
  getGetAppsCompatAppsGetMockHandler(),
  getGetAppsInCategoryCompatAppsCategoryCategoryGetMockHandler(),
  getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdated50GetMockHandler(),
  getGetRecentlyUpdatedCompatAppsCollectionRecentlyUpdatedGetMockHandler(),
  getGetRecentlyAddedCompatAppsCollectionNew50GetMockHandler(),
  getGetRecentlyAddedCompatAppsCollectionNewGetMockHandler(),
  getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgres50GetMockHandler(),
  getGetRecentlyUpdatedPostgresCompatAppsCollectionRecentlyUpdatedPostgresGetMockHandler(),
  getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgres50GetMockHandler(),
  getGetRecentlyAddedPostgresCompatAppsCollectionNewPostgresGetMockHandler(),
  getGetPopularAppsCompatAppsCollectionPopular50GetMockHandler(),
  getGetPopularAppsCompatAppsCollectionPopularGetMockHandler(),
  getGetSearchCompatAppsSearchQueryGetMockHandler(),
  getGetSingleAppCompatAppsAppIdGetMockHandler(),
]
