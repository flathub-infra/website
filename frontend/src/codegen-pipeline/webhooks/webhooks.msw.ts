/**
 * Generated by orval üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { HttpResponse, delay, http } from "msw"

export const getReceiveGithubWebhookApiWebhooksGithubPostMockHandler = (
  overrideResponse?:
    | unknown
    | ((
        info: Parameters<Parameters<typeof http.post>[1]>[0],
      ) => Promise<unknown> | unknown),
) => {
  return http.post("*/api/webhooks/github", async (info) => {
    await delay(1000)
    if (typeof overrideResponse === "function") {
      await overrideResponse(info)
    }
    return new HttpResponse(null, { status: 202 })
  })
}
export const getWebhooksMock = () => [
  getReceiveGithubWebhookApiWebhooksGithubPostMockHandler(),
]
