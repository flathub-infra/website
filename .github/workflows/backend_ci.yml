name: Backend CI

on:
  push:
    branches: main
    paths:
      - 'backend/**'
      - '.github/workflows/backend_ci.yml'
  pull_request:
    branches: main
    paths:
      - 'backend/**'
      - '.github/workflows/backend_ci.yml'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Setup Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential libcairo2-dev libgirepository1.0-dev gir1.2-ostree-1.0
          poetry install

      - name: Check module sort order
        run: poetry run isort --check-only app

      - name: Check code formatting with black
        run: poetry run black --check app

      - name: Check for code errors
        run: poetry run pyflakes app

  smoketests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: backend
          tags: backend
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Execute smoke tests
        run: |
          docker compose up -d -f docker-compose.yml
          docker exec backend-backend-1 pip3 install pytest
          docker exec backend-backend-1 python3 -m pytest tests/main.py
