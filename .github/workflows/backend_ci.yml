name: Backend CI

on:
  push:
    branches: main
    paths:
      - "backend/**"
      - ".github/workflows/backend_ci.yml"
  pull_request:
    branches: main
    paths:
      - "backend/**"
      - ".github/workflows/backend_ci.yml"
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Setup Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential libcairo2-dev libgirepository1.0-dev gir1.2-ostree-1.0
          poetry install

      - name: Check code formatting
        run: poetry run ruff format --check .

      - name: Check for code errors
        run: poetry run ruff check .

  smoketests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: backend
          tags: backend_backend
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Docker backend-node image
        uses: docker/build-push-action@v5
        with:
          context: backend-node
          tags: backend-node
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Execute smoke tests
        run: |
          docker compose --env-file .env.ci up --no-build -d
          bash tests/run_tests.sh
