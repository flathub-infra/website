worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /tmp/nginx.pid;

events {
    worker_connections  1024;
}

http {
    # Define supported locales in one place for easy maintenance
    map $dummy $supported_locales {
        default "en|en-GB|de|fr|nb-NO|tr|fi|id|pl|pt-BR|it|ru|si|vi|ar|es|ja|cs|zh-Hans|bg|uk|et|ca|el|ta|fa|hi|bn|eo|lt|hr|be|hu|nl|pt|zh-Hant|oc|da|az|he|ro|hy|ko|sv|pa|sq|ia|ckb|ga|kab|fil|br|gl";
    }

    proxy_temp_path /tmp/proxy_temp;
    client_body_temp_path /tmp/client_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$host" "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    charset_types
        text/css
        text/plain
        text/vnd.wap.wml
        application/javascript
        application/json
        application/rss+xml
        application/xml;

    tcp_nopush on;
    gzip on;
    gzip_comp_level    5;
    gzip_proxied       any;
    gzip_vary          on;

    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    proxy_buffering on;
    proxy_buffer_size 16k;
    proxy_buffers 8 16k;
    proxy_busy_buffers_size 32k;
    proxy_hide_header Strict-Transport-Security;

    # Extract locale from URL path (first segment)
    map $uri $url_locale {
        default "";
        "~^/([^/]+)" $1;
    }

    # Check if the first path segment is a supported locale
    map $url_locale $is_url_locale_supported {
        default 0;
        "~^($supported_locales)$" 1;
    }

    # Determine the final locale using Next.js priority: URL prefix > Cookie > Accept-Language
    map $is_url_locale_supported:$cookie_NEXT_LOCALE:$http_accept_language $detected_locale {
        default en;

        # If URL has supported locale prefix, use it
        "~^1:" $url_locale;

        # Fallback to NEXT_LOCALE cookie if present and no URL locale
        "~^0:([^:]+):" $1;

        # Fallback to Accept-Language header
        "0::~*pt-BR" pt-BR;
        "0::~*zh-CN" zh-Hans;
        "0::~*zh-TW" zh-Hant;
        "0::~*zh-HK" zh-Hant;
        "0::~*nb" nb-NO;
        "0::~*no" nb-NO;
        "0::~*en-GB" en-GB;
        "0::~*([a-z]{2})" $1;
    }

    server {
        listen 8080;
        server_name www.flathub.org;
        return 301 https://flathub.org$request_uri;
    }

    server {
        listen 8080;
        server_name flathub.app;

        rewrite ^/$ https://flathub.org last;
        rewrite ^/(.*)$ https://flathub.org/apps/$1;
    }

    server {
        listen 8080;
        server_name beta.flathub.org;
        return 301 https://flathub.org$request_uri;
    }

    server {
        listen 8080;
        server_name buildbot.flathub.org;
        return 301 https://flathub.org/pipelines;
    }

    server {
        listen 8080 default_server;
        server_name _;

        rewrite ^/apps/details/(.*)$ https://flathub.org/apps/$1;

        location /img/ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host flathub.org;
            proxy_pass http://frontend:3000/img/;

            proxy_hide_header Cache-Control;
            add_header Cache-Control "public, max-age=604800, stale-while-revalidate=86400, stale-if-error=86400";
        }

        location = / {
            add_header Surrogate-Control "no-cache";
            add_header Cache-Control "public, max-age=3600";
            return 302 https://flathub.org/$detected_locale/;
        }

        # Handle requests without locale prefix - redirect to include detected locale
        location ~ ^/(?!($supported_locales)/)(.*)$ {
            # Skip API and special paths
            if ($uri ~ ^/(api|img|stats|repo|beta-repo|_next)/) {
                break;
            }
            return 302 https://flathub.org/$detected_locale$uri;
        }

        # Handle requests with locale prefix
        location ~ ^/($supported_locales)/(.*)$ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host flathub.org;
            proxy_pass http://frontend:3000/$1/$2;
        }

        # Handle locale root paths (e.g., /en, /de, etc.)
        location ~ ^/($supported_locales)/?$ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host flathub.org;
            proxy_pass http://frontend:3000$uri;
        }

        # Fallback for any remaining requests - pass through to frontend
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host flathub.org;
            proxy_pass http://frontend:3000/;
        }

        location /api/v1/ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://backend:8000/compat/;
        }

        location ~ ^/api/v2/appstream {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://backend:8000;
        }

        location /api/v2/ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://backend:8000/;
        }

        location = /api/v1/apps/collection/new/feed {
            proxy_pass http://backend:8000/feed/new;
        }

        location = /api/v1/apps/collection/recently-updated/feed {
            proxy_pass http://backend:8000/feed/recently-updated;
        }

        rewrite ^/stats$ /stats/;
        location /stats/ {
            proxy_pass https://hub.flathub.org/stats/stable/;
        }

        location /repo/ {
            return 301 https://dl.flathub.org$request_uri;
            access_log off;
        }

        location /beta-repo/ {
            return 301 https://dl.flathub.org$request_uri;
            access_log off;
        }
    }
}
