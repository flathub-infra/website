"""Add quality moderation

Revision ID: 15a4f1ea9ada
Revises: 554c998365fb
Create Date: 2023-09-16 23:27:45.583159

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import DeclarativeBase, mapped_column
from sqlalchemy import orm


# revision identifiers, used by Alembic.
revision = "15a4f1ea9ada"
down_revision = "554c998365fb"
branch_labels = None
depends_on = None


class Base(DeclarativeBase):
    pass


class QualityGuidelineCategory(Base):
    """A category of quality guidelines"""

    __tablename__ = "qualityguidelinecategory"

    id = mapped_column(sa.Integer, primary_key=True)
    translation_key = mapped_column(sa.String, nullable=False, unique=True)


class QualityGuideline(Base):
    """A quality guideline"""

    __tablename__ = "qualityguideline"

    id = mapped_column(sa.Integer, primary_key=True)
    category_id = mapped_column(
        sa.Integer,
        sa.ForeignKey(QualityGuidelineCategory.id),
        nullable=False,
        index=True,
    )
    translation_key = mapped_column(sa.String, nullable=False, unique=True)
    url = mapped_column(sa.String, nullable=False, unique=True)
    read_only = mapped_column(sa.Boolean, nullable=False, server_default="false")
    needed_to_pass_since = mapped_column(sa.DateTime, nullable=True)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "qualityguidelinecategory",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("translation_key", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("translation_key"),
    )
    op.create_table(
        "qualityguideline",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("translation_key", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("read_only", sa.Boolean(), server_default="false", nullable=False),
        sa.Column("needed_to_pass_since", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["qualityguidelinecategory.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("translation_key"),
        sa.UniqueConstraint("url"),
    )
    op.create_index(
        op.f("ix_qualityguideline_category_id"),
        "qualityguideline",
        ["category_id"],
        unique=False,
    )
    op.create_table(
        "qualitymoderation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("guideline_id", sa.Integer(), nullable=False),
        sa.Column("app_id", sa.String(), nullable=False),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("passed", sa.Boolean(), nullable=False),
        sa.Column("comment", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["guideline_id"],
            ["qualityguideline.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["flathubuser.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_qualitymoderation_app_id"),
        "qualitymoderation",
        ["app_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qualitymoderation_guideline_id"),
        "qualitymoderation",
        ["guideline_id"],
        unique=False,
    )
    op.add_column(
        "flathubuser",
        sa.Column(
            "is_quality_moderator",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
        ),
    )
    # ### end Alembic commands ###

    # Populate quality guideline categories
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    categories = [
        QualityGuidelineCategory(translation_key="quality-guideline-category-general"),
        QualityGuidelineCategory(translation_key="quality-guideline-category-app-icon"),
        QualityGuidelineCategory(translation_key="quality-guideline-category-app-name"),
        QualityGuidelineCategory(translation_key="quality-guideline-category-summary"),
    ]
    session.add_all(categories)
    session.commit()

    # Populate quality guidelines
    categories = session.query(QualityGuidelineCategory).all()
    guidelines = [
        QualityGuideline(
            category_id=categories[0].id,
            translation_key="quality-guideline-general-no-trademark-violations",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#no-trademark-violations",
            # now
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[1].id,
            translation_key="quality-guideline-app-icon-size",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#icon-size",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[1].id,
            translation_key="quality-guideline-app-icon-footprint",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#reasonable-footprint",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[1].id,
            translation_key="quality-guideline-app-icon-contrast",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#good-contrast",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[1].id,
            translation_key="quality-guideline-app-icon-detail",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#not-too-much-detail",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[1].id,
            translation_key="quality-guideline-app-icon-no-baked-in-shadows",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#no-baked-in-shadows",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[1].id,
            translation_key="quality-guideline-app-icon-in-line-with-contemporary-styles",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#in-line-with-contemporary-styles",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[2].id,
            translation_key="quality-guideline-app-name-not-too-long",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#not-too-long",
            needed_to_pass_since=sa.text("now()"),
            read_only=True,
        ),
        QualityGuideline(
            category_id=categories[2].id,
            translation_key="quality-guideline-app-name-just-the-name",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#just-the-name",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[2].id,
            translation_key="quality-guideline-app-no-weird-formatting",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#no-weird-formatting",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[3].id,
            translation_key="quality-guideline-app-summary-not-too-long",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#not-too-long-1",
            needed_to_pass_since=sa.text("now()"),
            read_only=True,
        ),
        QualityGuideline(
            category_id=categories[3].id,
            translation_key="quality-guideline-app-summary-not-technical",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#not-technical",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[3].id,
            translation_key="quality-guideline-app-summary-no-weird-formatting",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#no-weird-formatting-1",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[3].id,
            translation_key="quality-guideline-app-summary-dont-repeat-app-name",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#dont-repeat-the-name",
            needed_to_pass_since=sa.text("now()"),
        ),
        QualityGuideline(
            category_id=categories[3].id,
            translation_key="quality-guideline-app-summary-dont-start-with-an-article",
            url="https://docs.flathub.org/docs/for-app-authors/appdata-guidelines/quality-guidelines/#dont-start-with-an-article",
            needed_to_pass_since=sa.text("now()"),
        ),
    ]
    session.add_all(guidelines)
    session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("flathubuser", "is_quality_moderator")
    op.drop_index(
        op.f("ix_qualitymoderation_guideline_id"), table_name="qualitymoderation"
    )
    op.drop_index(op.f("ix_qualitymoderation_app_id"), table_name="qualitymoderation")
    op.drop_table("qualitymoderation")
    op.drop_index(
        op.f("ix_qualityguideline_category_id"), table_name="qualityguideline"
    )
    op.drop_table("qualityguideline")
    op.drop_table("qualityguidelinecategory")
    # ### end Alembic commands ###
